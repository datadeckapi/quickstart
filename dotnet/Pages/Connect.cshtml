@page
@model ConnectModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    var AntiXsrfRequestToken = Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
}

<h1>
    Connect your account with us
</h1>

@section Scripts
{
    <script src="https://link.deck.co/link-initialize.js"></script>
    <script>
        ; (function linkDemoIIFE(context) {
            context.DatadeckSample = {
                async startLinkSession(
                    {
                        afterLoad = () => { },
                        onError = () => { },
                        onSuccess = () => { },
                        onExit = () => { },
                    }
                ) {
                    try {
                        // Create a Link session using the link token that was gotten from the backend that called the Deck API (/link/token/create)
                        const token = '@Model.DatadeckLinkToken';
                        const handler = Deck.create({
                            token,
                            onSuccess,
                            onExit
                            
                            // A single source can be specified, this will skip the source select screen.
                            // For the skip to work, make sure that the source specified here would appear normally on the source select screen.
                            //, source_id: '09320c5d-8552-47df-8aa3-98fe1c0b5505'
                        });
                        handler.open();
                    } catch (e) {
                        console.error(e);
                        onError(e);
                    }

                    afterLoad();
                }
            }
        })(window);

        function exchangePublicToken({ public_token }) {
            this.access_token = null;
            // Call the backend and send the public token that was gotten from the Link session
            $.ajax({
                type: 'POST',
                url: "/Connect",
                data: { public_token },
                headers:
                {
                    // This is only required by ASP.NET Razor pages
                    "RequestVerificationToken": "@AntiXsrfRequestToken"
                }
            }).done(data => { this.access_token = data.access_token })
        }

        function redirectToPageThanks() {
            window.location.href = window.location.href = '/Thanks?access_token=' + this.access_token;
        }

        DatadeckSample.startLinkSession({
            onSuccess: exchangePublicToken,
            onExit: redirectToPageThanks,
        });
    </script>
}